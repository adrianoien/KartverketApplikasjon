@model AreaChange

@{
    ViewData["Title"] = "Register a change";
}

<h2>Register a change</h2>

<!-- Map container with defined height -->
<div id="map" style="height: 400px;"></div>
<br />

<form asp-action="RegisterAreaChange" method="post">
    
    <input type="hidden" id="geoJsonInput" name="geoJson" />
    <div>
        <label for="description"> Change Description:</label>
        <textarea id="description" name="Description" class="form-control"></textarea>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Submit</button>
</form>

@section Scripts {
    
    <!-- 1. Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />

    <!-- 2. Leaflet Draw CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css" />

    <!-- 3. Leaflet JS -->
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

    <!-- 4. Leaflet Draw JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>

    
    <script>
        var map = L.map('map').setView([51.505, -0.09], 13);  // Center the map on a location

        // Add a base map layer
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);

        // Initialize the feature group that will hold the drawn shapes
        var drawnItems = new L.FeatureGroup();
        map.addLayer(drawnItems);

        // Creates the drawing control on the left hand side
        // The drawing control enables drawing of markers, polygons, and polylines
        var drawControl = new L.Control.Draw({
            draw: {
                polygon: true,
                polyline: true,
                marker: true,
                circle: false,  // Disable circle drawing
                rectangle: true
            },
            edit: {
                featureGroup: drawnItems
            }
        });
        map.addControl(drawControl);

        // Event handling when a layer is drawn on the map
        map.on(L.Draw.Event.CREATED, function (e) {
            var layerType = e.layerType,
                layer = e.layer;

            drawnItems.addLayer(layer);

            // Get the GeoJSON representation of the drawn layer
            var geoJsonData = layer.toGeoJSON();
            var geoJsonString = JSON.stringify(geoJsonData);

            // Set the GeoJSON string into the hidden input field in the form
            document.getElementById('geoJsonInput').value = geoJsonString;
        });
    </script>
}
